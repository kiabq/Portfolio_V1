---
import "/public/css/styles.css";
const { title } = Astro.props;
---

<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<meta name="generator" content={Astro.generator} />
		<title>cnwy - {title}</title>
		<link rel="icon" href="/assets/favicon.ico" type="image/x-icon" />

		<!-- Fonts & Icons -->
		<link rel="preconnect" href="https://fonts.googleapis.com" />
		<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
		<!-- Material Icons -->
		<!-- <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Rounded:opsz,wght,FILL,GRAD@48,400,1,0" /> -->
		<link
			rel="stylesheet"
			href="https://fonts.googleapis.com/css2?family=Material+Symbols+Rounded:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200"
		/>
		<!-- Secular One -->
		<link
			href="https://fonts.googleapis.com/css2?family=Secular+One&display=swap"
			rel="stylesheet"
		/>
		<!-- Ubuntu -->
		<link
			href="https://fonts.googleapis.com/css2?family=Ubuntu:ital,wght@0,300;0,400;0,500;0,700;1,300;1,400;1,500;1,700&display=swap"
			rel="stylesheet"
		/>
		<!-- Josefin -->
		<link
			href="https://fonts.googleapis.com/css2?family=Josefin+Sans:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;1,100;1,200;1,300;1,400;1,500;1,600;1,700&display=swap"
			rel="stylesheet"
		/>

		<script src="../scripts/theme.ts"></script>
		<script src="../scripts/cgol.ts"></script>
		<script>
			const current_song: HTMLSpanElement | null = document.querySelector("#currentSong");
			const current_artist: HTMLSpanElement | null = document.querySelector("#currentArtist");
			const spotify_footer: HTMLDivElement | null = document.querySelector(".footer-spotify");
			const spotify_album: HTMLImageElement | null = document.querySelector(".footer-spotify-album");
			const spotify_container: HTMLDivElement | null = document.querySelector(".footer-spotify-info");

			spotify_album!.style.display = "none";

			function getCurrentSong() {
				fetch("https://spot.cnwy.dev")
					.then((result) => {
						return result.json();
					})
					.then((result) => {
						if (result.data.is_playing) {
							const artist = result.data.item.artists[0].name;
							const track = result.data.item.name;
							const album_cover = result.data.item.album.images;

							spotify_album!.src = album_cover[2].url;							
							current_song.innerText = track;
							current_artist.innerText = artist;

							spotify_album!.style.display = "inline-block";
						} else {
							current_song.innerText = "nothing playing";
							current_artist.innerText = "";
							spotify_album!.style.display = "none";	
						}
					}).catch((e) => {
						(current_song as HTMLElement).innerText = "nothing playing";
					})
			}

			getCurrentSong();
			
			setInterval(() => {
				getCurrentSong();
			}, 10000);
		</script>
	</head>

	<script defer>
		const theme = localStorage.getItem("theme");
		const htmlTag = document.getElementsByTagName("html");

		const STYLESHEET = document.styleSheets[4];
		STYLESHEET.insertRule(".preload {}", STYLESHEET.cssRules.length);

		const PRELOAD = [...STYLESHEET.cssRules].find(
			(val) => val.selectorText === ".preload"
		);

		const LIGHT =
			STYLESHEET.cssRules[0].style.getPropertyValue("--lightTheme");
		const DARK =
			STYLESHEET.cssRules[0].style.getPropertyValue("--darkTheme");

		PRELOAD.style.setProperty("transform", "translateY(-28px)");
		htmlTag[0].style.backgroundColor = DARK;
		htmlTag[0].style.color = LIGHT;

		if (theme === "light" || theme === null) {
			PRELOAD.style.setProperty("transform", "translateY(0px)");
			htmlTag[0].style.backgroundColor = LIGHT;
			htmlTag[0].style.color = DARK;
		}
	</script>

	<body class="content-container">
		<div class="content-wrapper">
			<slot />
		</div>
	</body>
</html>
<style is:global>
	html {
		font-family: "Ubuntu", sans-serif;
	}
	code {
		font-family: Menlo, Monaco, Lucida Console, Liberation Mono,
			DejaVu Sans Mono, Bitstream Vera Sans Mono, Courier New, monospace;
	}
</style>
